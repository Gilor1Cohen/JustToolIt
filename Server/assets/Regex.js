const regexTokenList = [
  { token: "\\d", description: "Digit (0â€“9)", category: "character class" },
  { token: "\\D", description: "Not a digit", category: "character class" },
  {
    token: "\\w",
    description: "Word character (a-z, A-Z, 0-9, _)",
    category: "character class",
  },
  {
    token: "\\W",
    description: "Not a word character",
    category: "character class",
  },
  {
    token: "\\s",
    description: "Whitespace (space, tab, newline)",
    category: "character class",
  },
  { token: "\\S", description: "Not whitespace", category: "character class" },
  { token: "\\b", description: "Word boundary", category: "anchor" },
  { token: "\\B", description: "Not a word boundary", category: "anchor" },
  { token: "\\t", description: "Tab character", category: "escape" },
  { token: "\\n", description: "Newline character", category: "escape" },
  { token: "\\r", description: "Carriage return", category: "escape" },
  { token: "\\\\", description: "Backslash character", category: "escape" },
  {
    token: ".",
    description: "Any character except newline",
    category: "wildcard",
  },
  { token: "^", description: "Start of string or line", category: "anchor" },
  { token: "$", description: "End of string or line", category: "anchor" },
  { token: "*", description: "0 or more repetitions", category: "quantifier" },
  { token: "+", description: "1 or more repetitions", category: "quantifier" },
  { token: "?", description: "0 or 1 repetition", category: "quantifier" },
  { token: "|", description: "OR operator", category: "logic" },
  { token: "(...)", description: "Capturing group", category: "group" },
  { token: "(?:...)", description: "Non-capturing group", category: "group" },
  { token: "(?=...)", description: "Positive lookahead", category: "group" },
  { token: "(?!...)", description: "Negative lookahead", category: "group" },
  { token: "(?<=...)", description: "Positive lookbehind", category: "group" },
  { token: "(?<!...)", description: "Negative lookbehind", category: "group" },
  {
    token: "(?<name>...)",
    description: "Named capturing group",
    category: "group",
  },
  {
    token: "\\k<name>",
    description: "Backreference to named group",
    category: "backreference",
  },
  {
    token: "\\1",
    description: "Backreference to group 1",
    category: "backreference",
  },
  {
    token: "{n}",
    description: "Exactly n repetitions",
    category: "quantifier",
  },
  {
    token: "{n,}",
    description: "At least n repetitions",
    category: "quantifier",
  },
  {
    token: "{n,m}",
    description: "Between n and m repetitions",
    category: "quantifier",
  },
  {
    token: "*?",
    description: "0 or more (non-greedy)",
    category: "quantifier",
  },
  {
    token: "+?",
    description: "1 or more (non-greedy)",
    category: "quantifier",
  },
  { token: "??", description: "0 or 1 (non-greedy)", category: "quantifier" },
  {
    token: "[abc]",
    description: "Character set (a, b, or c)",
    category: "character set",
  },
  {
    token: "[^abc]",
    description: "Negated character set (not a, b, or c)",
    category: "character set",
  },
  {
    token: "[a-z]",
    description: "Character range from a to z",
    category: "character set",
  },
  {
    token: "[0-9]",
    description: "Digit range from 0 to 9",
    category: "character set",
  },
  { token: "\\xhh", description: "Character by hex code", category: "unicode" },
  {
    token: "\\uhhhh",
    description: "Character by Unicode",
    category: "unicode",
  },
  { token: "\\p{L}", description: "Any letter (Unicode)", category: "unicode" },
  {
    token: "\\P{L}",
    description: "Not a letter (Unicode)",
    category: "unicode",
  },
  { token: "g", description: "Global match flag", category: "flag" },
  { token: "i", description: "Case-insensitive flag", category: "flag" },
  { token: "m", description: "Multiline flag", category: "flag" },
  {
    token: "s",
    description: "DotAll flag (dot matches newline)",
    category: "flag",
  },
  { token: "u", description: "Unicode flag", category: "flag" },
  { token: "y", description: "Sticky flag", category: "flag" },
];

module.exports = regexTokenList;
